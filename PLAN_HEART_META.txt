# Meta-SDK Ultra Plan

## 0. Vendor & Setup
- Add submodules:
  - vendor/memory-heart (https://github.com/iMAGRAY/Memory-Heart)
  - vendor/codex (https://github.com/openai/codex)
  - vendor/claude-code (https://github.com/anthropics/claude-code)
- Update .gitmodules and document `git submodule update --init --recursive`
- New Make target: `make vendor-update`

## 1. Agents Install
- Script `scripts/agents/install.sh` builds/copies binaries -> scripts/bin/
- Make target `make agents-install`
- Update deps_checker/setup to warn if binaries missing

## 2. Memory Heart Integration
- Wrapper `scripts/agents/heart.sh` calling vendor/memory-heart
- Config `config/heart.yaml`
- Make targets: `heart-sync`, `heart-query`, `heart-serve`, `heart-update`
- `make verify` includes `heart-check`

## 3. Context & Agent Wrapper
- `scripts/agents/context.py` generates prompt (progress tables, diff, heart query)
- `scripts/agents/run.sh` picks agent, sandbox, logs output
- Make targets: `agent-assign`, `agent-plan`, `agent-analysis`
- Tests: mock CLI to ensure context & run work

## 4. Memory Heart Pipeline
- Ensure incremental chunking & embedding using Memory-Heart
- Folders: context/heart/{vectorstore,chunks,summaries}
- `make heart-sync` executed during setup (optional `SKIP_HEART`)
- Use heart query for prompts fetch

## 5. UX Integration
- `make status` and `make progress` display tables (already done)
- After this plan: integrate agent logs summary
- README/AGENTS: Document new commands and flows

## 6. One-Button Flow
- Update `make setup`: run agents-install, heart-sync
- Pre-commit/CI ensures heart/agents available

## 7. Sandbox & Security
- Config allows sandbox mode (none/firejail/docker)
- redact secrets in logs
- store agent logs in reports/agents/

## 8. Testing
- Add pytest for context pipeline, heart query, agent wrapper (mock)
- Verify command includes quick agent sanity check
